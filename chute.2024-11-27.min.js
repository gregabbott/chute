const chute=(()=>{/*By + (C) Greg Abbott 2024. V: 2024-11-27*/let t,e=null;const n=(...t)=>{throw new Error(t)},o=t=>t instanceof Function,r=(t,e)=>o(Object.getPrototypeOf(t)[e]),l=e=>e.reduce((function(t,e){if(o(e))return e(t);if("log"===e)return console[e](t),t;if("string"==typeof e&&r(t,e))return t[e]();"string"==typeof e?n(`Data lacks "${e}" method`):n("Not a function:",e);return t}),t),a=new Proxy((function(){}),{get:(t,n)=>(e=n,a),apply:(f,i,u)=>{let c=e;if(e&&(e=null),"log"==c)console[c](...u,t);else if("if"==c)(({cond:e,fn:r})=>{const l=o(e);l||!1===e||!0===e||n("give .if(arg1) bool OR test=data=>{â€¦return bool}"),o(r)?(l&&!0===e(t)||!0===e)&&(t=r(t)):n("give .if(arg2) a Fn to send data to",r)})({cond:u[0],fn:u[1]});else if("tap"==c&&o(u[0]))u[0](t);else if("tap"==c)n("give .tap a fn to send data to");else{if(null===c&&0===u.length)return t;null===c||"and"===c?t=l(u):c&&((e,o)=>{r(t,e)?t=t[e](...o):n(`Data lacks "${e}" method`)})(c,u)}return a}});return(e,...n)=>(t=e,n.length>0&&(t=l(n)),a)})();